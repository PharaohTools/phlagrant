{"40879215396551847":{"module":"ClearWorkspace","steptype":"clearworkspace","data":"on"},"7895428616097204":{"module":"Git","steptype":"gitclonepoll","data":"on"},"5221359287802089":{"module":"Shell","steptype":"shelldata","data":"ls -lah;\r\necho $PWD;\r\n# sudo cp -r ptvirtualize\/* \/opt\/ptvirtualize\/ptvirtualize\/ ;"},"5904461283753337":{"module":"Shell","steptype":"shelldata","data":"behat --config ptvirtualize\/build\/tests\/behat\/behat.yml"},"662353164921901":{"module":"PHPScript","steptype":"phpscriptdata","data":"chdir(\"ptvirtualize\");\r\necho getcwd().\"\\n\";\r\n$command = \"git log --pretty=oneline --abbrev-commit -1\";\r\n$output = array() ;\r\nexec($command, $output) ;\r\n$msg = substr($output[0], 8);\r\necho \"Last commit was: $msg \\n\";\r\n\r\n$command = 'git describe --tags `git rev-list --tags --max-count=1`' ;\r\n$output = array() ;\r\nexec($command, $output) ;\r\n$tag = $output[0] ; \r\n\r\nfunction increaseVersion($type, $tag) {\r\n    $sections = explode(\".\", $tag) ;\r\n    if ($type=='TINY') {\r\n         $sections[2] = $sections[2] + 1 ; }\r\n    if ($type=='MINOR') {\r\n         $sections[1] = $sections[1] + 1 ;\r\n         $sections[2] = 0 ; }\r\n    if ($type=='MAJOR') {\r\n         $sections[0] = $sections[0] + 1 ; \r\n         $sections[1] = 0 ;\r\n         $sections[2] = 0 ; }\r\n    $tag = implode ('.', $sections) ; \r\n    return $tag;\r\n}\r\n\r\nif (strpos($msg, 'TINY RELEASE')===false &&\r\n    strpos($msg, 'MINOR RELEASE')==false &&\r\n    strpos($msg, 'MAJOR RELEASE')==false) {\r\n    echo \"No Release found in this commit : Exiting Step\\n\" ;\r\n    return; } \r\n\r\necho \"Current Tagged Version Is: $tag\\n\" ;\r\n\r\nif (strpos($msg, 'TINY RELEASE')!==false) { $tag = increaseVersion('TINY', $tag) ;}\r\nif (strpos($msg, 'MINOR RELEASE')!==false)  { $tag = increaseVersion('MINOR', $tag) ;}\r\nif (strpos($msg, 'MAJOR RELEASE')!==false) { $tag = increaseVersion('MAJOR', $tag) ;}\r\n\r\n$tagComm = \"git tag $tag\";\r\nexec($tagComm);\r\necho \"New Tagged Version Is: $tag\\n\" ; "},"3413454691394885":{"module":"Shell","steptype":"shelldata","data":"echo \"Ensuring the SSH Key Friendly version of Git is available\\n\" ;\r\nsudo ptconfigure git-key-safe install -yg ;"},"39951745943864903":{"module":"Shell","steptype":"shelldata","data":"echo \"We are in directory...\" ;\r\npwd ;\r\necho 'Adding Github Repository Remote' ;\r\ngit remote add github git@github.com:PharaohTools\/ptvirtualize.git  2>&1 ;\r\necho 'Performing Git Push to Github Repository' ;\r\ngit-key-safe -i \/Users\/ptbuild\/.ssh\/id_rsa push github master --tags --verbose --force  2>&1 ;"}}