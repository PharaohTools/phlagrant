{"40879215396551847":{"module":"ClearWorkspace","steptype":"clearworkspace","data":"on"},"7895428616097204":{"module":"Git","steptype":"gitclonepoll","data":"on"},"5221359287802089":{"module":"Shell","steptype":"shelldata","data":"ls -lah;\r\necho PWD;\r\n# sudo cp -r ptvirtualize\/* \/opt\/ptvirtualize\/ptvirtualize\/ ;"},"5904461283753337":{"module":"Shell","steptype":"shelldata","data":"behat --config ptvirtualize\/build\/tests\/behat\/behat.yml"},"662353164921901":{"module":"PHPScript","steptype":"phpscriptdata","data":"chdir(\"ptvirtualize\");\r\necho getcwd().\"\\n\";\r\ncommand = \"git log --pretty=oneline --abbrev-commit -1\";\r\noutput = array() ;\r\nexec(command, output) ;\r\nmsg = substr(output[0], 8);\r\n\r\ncommand = 'git describe --tags `git rev-list --tags --max-count=1`' ;\r\noutput = array() ;\r\nexec(command, output) ;\r\ntag = output[0] ; \r\n\r\nfunction increaseVersion(type, tag) {\r\n    sections = explode(\".\", tag) ;\r\n    if (type=='TINY') { tag[2] = tag[2] + 1 ; }\r\n    if (type=='MINOR') { tag[1] = tag[1] + 1 ; }\r\n    if (type=='MAJOR') { tag[0] = tag[0] + 1 ; }\r\n    tag = implode ('.', tag) ; \r\n    return tag;\r\n}\r\n\r\n\r\nif (strpos('TINY RELEASE', msg)==false &&\r\n    strpos('MINOR RELEASE', msg)==false &&\r\n    strpos('MAJOR RELEASE', msg)==false) {\r\n    echo \"No Release found in this commit : Exiting Step\\n\" ;\r\n    return; } \r\n\r\necho \"Current Tagged Version Is: tag\\n\" ;\r\n\r\nif (strpos('TINY RELEASE', msg)!==false) { tag = increaseVersion('TINY') ;}\r\nif (strpos('MINOR RELEASE', msg)!==false)  { tag = increaseVersion('MINOR') ;}\r\nif (strpos('MAJOR RELEASE', msg)!==false) { tag = increaseVersion('MAJOR') ;}\r\n\r\necho \"New Tagged Version Is: tag\\n\" ; \r\n"},"3413454691394885":{"module":"Shell","steptype":"shelldata","data":"echo \"Ensuring the SSH Key Friendly version of Git is available\\n\" ;\r\nsudo ptconfigure git-key-safe install -yg ;"},"39951745943864903":{"module":"Shell","steptype":"shelldata","data":"echo \"We are in directory CWD\" ;\r\necho 'Adding Github Repository Remote' ;\r\ngit remote add github git@github.com:PharaohTools\/ptvirtualize.git 2>&1 ;\r\necho 'Performing Git Push to Github Repository' ;\r\ngit-key-safe -i \/Users\/ptbuild\/.ssh\/id_rsa push --tags --verbose --force 2>&1 ;"}}